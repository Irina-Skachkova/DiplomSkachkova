
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)  
	
	СформироватьДвижения();
	
	РассчитатьОклад();
	
	РассчитатьОтпуск();

	РассчитатьНДФЛ();
	
	РассчитатьЗарплатуКВыплате();
	
КонецПроцедуры

Процедура СформироватьДвижения() 
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина;
	Движения.ВКМ_Удержания.Записывать = Истина;
	
	ПериодРегистрации = НачалоМесяца(Дата);
	
	Для Каждого Строка Из ОсновныеНачисления Цикл  
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить(); 
		ЗаполнитьЗначенияСвойств(Движение, Строка);
		Движение.ПериодДействияНачало = Строка.ДатаНачала;
		Движение.ПериодДействияКонец = КонецДня(Строка.ДатаОкончания);
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.ВидРасчета = Строка.ВидРасчета;
		 
		
		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(ПериодРегистрации,-12));
			Движение.БазовыйПериодКонец = НачалоМесяца(ПериодРегистрации)-1; 
		КонецЕсли;   		
		
		
	КонецЦикла;
	
	Для Каждого Строка Из ДополнительныеНачисления Цикл 
		
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Строка);
		Движение.ПериодРегистрации = ПериодРегистрации; 
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПремияОтПродаж;
		Движение.Результат = Строка.СуммаНачисления;  
		
		
	КонецЦикла;
	
	Для Каждого Строка Из Удержания Цикл 		
	Движение = Движения.ВКМ_Удержания.Добавить();
	ЗаполнитьЗначенияСвойств(Движение, Строка);

	Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
	Движение.Сотрудник = Строка.Сотрудник;
	Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
	Движение.БазовыйПериодКонец = КонецМесяца(Дата);
	Движение.ПериодРегистрации = ПериодРегистрации;
	КонецЦикла;

	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИфункции

Процедура РассчитатьОклад() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.РабочиеДниФактическийПериодДействия, 0) КАК ОтработаноДней,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.РабочиеДниПериодДействия, 0) КАК РабочихДней
	|ПОМЕСТИТЬ ВТ_ДанныеГрафика
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад,
	|	ВТ_ДанныеГрафика.ОтработаноДней КАК ОтработаноДней,
	|	ВТ_ДанныеГрафика.РабочихДней КАК РабочихДней
	|ИЗ
	|	ВТ_ДанныеГрафика КАК ВТ_ДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
	|				&ПериодРегистрации,
	|				Сотрудник В
	|					(ВЫБРАТЬ
	|						ВТ_ДанныеГрафика.Сотрудник КАК Сотрудник
	|					ИЗ
	|						ВТ_ДанныеГрафика КАК ВТ_ДанныеГрафика)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|		ПО ВТ_ДанныеГрафика.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(Дата));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	
	Для Каждого Движение Из Движения.ВКМ_ОсновныеНачисления Цикл
		
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			Продолжить;
		КонецЕсли; 
		
		Выборка.Сбросить();
		Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки");
		Движение.ОтработаноДней = Выборка.ОтработаноДней;	
		Движение.Результат = ?(Выборка.РабочихДней <> 0, Выборка.Оклад / Выборка.РабочихДней * Выборка.ОтработаноДней,0);
				
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьОтпуск()
	
	Запрос = Новый Запрос;
	Запрос.Текст =  
	
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза,0) КАК ОснНачисления,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК ДопНачисления,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза, 0) КАК РабочихДней,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.КалендарныеДниФактическийПериодДействия, 0) КАК ДнейОтпуска
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
	|				&Измерения,
	|				&Измерения,
	|				,
	|				ВидРасчета = &ВидРасчета
	|					И Регистратор = &Регистратор) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(
	|				&Измерения,
	|				&Измерения,
	|				,
	|				ВидРасчета = &ВидРасчета
	|					И Регистратор = &Регистратор) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки";

	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);	
	Измерения = Новый Массив; 
	Измерения.Добавить("Сотрудник");	
	Запрос.УстановитьПараметр("Измерения", Измерения); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	
	Для Каждого Движение Из Движения.ВКМ_ОсновныеНачисления Цикл
		
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда 
			
			Продолжить;
			
		КонецЕсли;   
		 
		Выборка.Сбросить();
		Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки");
		Начисления = Выборка.ОснНачисления + Выборка.ДопНачисления;
		Движение.Результат = ?(Выборка.РабочихДней <> 0, Начисления * Выборка.ДнейОтпуска / Выборка.РабочихДней, 0);
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьНДФЛ() 
		
	Запрос = Новый Запрос;
	Запрос.Текст = 	
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) + ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК Начисления,
	|	ВКМ_Удержания.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(
	|				&Измерения,
	|				&Измерения,
	|				&Разрез,
	|				Регистратор = &Регистратор
	|					И ВидРасчета = &ВидРасчета) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(
	|				&Измерения,
	|				&Измерения,
	|				&Разрез,
	|				Регистратор = &Регистратор
	|					И ВидРасчета = &ВидРасчета) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РегистраторРазрез) <> ТИП(Документ.ВКМ_НачислениеФиксированнойПремии)"; 
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Разрез = Новый Массив;
	Разрез.Добавить("Регистратор");
	
	
	Запрос.УстановитьПараметр("Измерения", Измерения); 
	Запрос.УстановитьПараметр("Разрез", Разрез);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_Удержания.НДФЛ);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Для Каждого Движение Из Движения.ВКМ_Удержания Цикл
		
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ВКМ_Удержания.НДФЛ Тогда 
			
			Продолжить;
			
		КонецЕсли;   
		
		Выборка.Сбросить();
		Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки");
		Движение.НДФЛ = ?(Выборка.Начисления <> 0, Выборка.Начисления * 13 / 100, 0);
		
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьЗарплатуКВыплате() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
					|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
					|	ЕСТЬNULL(ВКМ_ОсновныеНачисления.Результат, 0) КАК Результат
					|ПОМЕСТИТЬ ВТ_Начисления
					|ИЗ
					|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
					|ГДЕ
					|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	ВКМ_ДополнительныеНачисления.Сотрудник,
					|	ЕСТЬNULL(ВКМ_ДополнительныеНачисления.Результат, 0)
					|ИЗ
					|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
					|ГДЕ
					|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ВТ_Начисления.Сотрудник КАК Сотрудник,
					|	СУММА(ВТ_Начисления.Результат) КАК Результат
					|ПОМЕСТИТЬ ВТ_ГРуппировка
					|ИЗ
					|	ВТ_Начисления КАК ВТ_Начисления
					|СГРУППИРОВАТЬ ПО
					|	ВТ_Начисления.Сотрудник
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ВТ_ГРуппировка.Сотрудник КАК Сотрудник,
					|	ВТ_ГРуппировка.Результат КАК Результат,
					|	СУММА(ВКМ_Удержания.НДФЛ) КАК НДФЛ
					|ИЗ
					|	ВТ_ГРуппировка КАК ВТ_ГРуппировка
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
					|		ПО ВТ_ГРуппировка.Сотрудник = ВКМ_Удержания.Сотрудник
					|ГДЕ
					|	ВКМ_Удержания.Регистратор = &Ссылка
					|СГРУППИРОВАТЬ ПО
					|	ВТ_ГРуппировка.Сотрудник,
					|	ВТ_ГРуппировка.Результат";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.Результат - Выборка.НДФЛ;
		
	КонецЦикла;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	
КонецПроцедуры

#КонецОбласти



